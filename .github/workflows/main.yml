name: Deploy to Amazon to ECR

on:
  push:
    branches:
      - staging

env:
  AWS_REGION: us-east-1                   
  ECR_REPOSITORY: lambdatesting                 

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CPID }}
        aws-secret-access-key: ${{ secrets.CPPK }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        docker build \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: check changes and deploy in EC2 server
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.STAGE_AWS_PK_A }}
        host: ${{ secrets.STAGE_AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        script: | 
         ls -lah
         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin eyJwYXlsb2FkIjoidW1LNXlJWkFMdHRQWFhXZDlRMEpOZ1JGS2h4VlhHU3cyeWptc28yQUU1WlRIZy9sbTR4VFZ5TklyYm5kbk1IOEdVV1FySGlRbWJwcjJIZWZ2a0l4cURCS1FibzREOVNLOE9hb083Q2hWaHd3MHFQaHRBTTBaNjNHQlY2dmY4RVZ3VVM5ak5DS3JZY2x3T2VkNUs4RzNZdjdxS2N4MHFSSFdmYzlkV0hXNzlaYWtyL0ZKaksycnRMTDNLdzVVZGgxQVJJZjU2dmF3VmdFRHRVdEcvS21UVTJhaXg5aE8wMEdKeG5xNjJWdnV6ZGJOODJrMFdneUpHSWhjZHl1NStiZFhMOVREb1FYMUZTUDZ1VWJ0RzR6Yk5wMmpTem9QUndjNlI1QVFJVmxJVlo1bFp6eCtGRlQxZ2VHdUJUd3MvT2Iwc1VHQTM3TklrL0lzQmQyamJrN3UybU9SdCsvNFI5QStVVm5lMEM2UUZPKzlRQWVqSkhkb3NoS3c4TDJMMGE3ZTY1NHVzV1NnWFdlcVRjSVpOU1cwN0RlZU1GdXNrUHdnWGVoekNGejNhUkhaNTVEdGNMempsSzM3MHZhUlBnbEk5c1BVYUptZ1dWMUlFa1RyL2l2a0dlekxKYzJKT0xJOElJS0c2d3dCODA1eG1rb3p3MG5BWEU0WEhNekRrT2NFNWF1S3BkUGUzWU5wZWlJZy8wR1lwa0k2OVMvcE5Ua09Wdm9hYWJBVGFTdS92MDVlM0Fzakh5TmplOFp2VHRuM3JFSjMwTFRGZjZqUG5OSGl0TTRTWHY3bW1jWGUveUVyM3lvNzU2b24wSG15OVJlUE5iOXJ1dHBwckMyWHE1V2hkajhJUHhmdnpjK0dPaXBaMnJJbjFlVmp6Y2EyWWYxNmJzVTJlNjhRTmNNTFl4Z1czZDRuUEZieXQ0MStPWWZDTEZlbkl2RlMwdk9tWHYzbGsvOTBST0dXNHR0Y1BEVCtaOTArYlNJekZmTXlCa2U5Ui9VRy9uTkxaeUloeXNCSXcxZWp6Qlhyd3VXeGpsWXd4NlhHRk14ZVNJYnRxbzZZenZMK1hSNUVnaVZHdmVjNUFoL3V2V3pPSy83Tzlubk1Eemp1K1QwdnJaZ0xpQmVlT0RYWjdhdWFKaXV4cU9HODl3WFplenJKWG9KY3hyODhqSVYyZmdKVk1ubU8zTUFzamgzd1NSL0gwc2ErV0F6c0NPUzE0aktJeTh3T2JlMDhTWmhnSmwwMmhZY0tnanF0Z1BoUlREdmNNZjhLNkdyN0V5cXg4Ulk1K3Y0Tm0yUzdjQ3ZhbG1yc0Q2VmZMWFFUOElvaHFMYzJGM3hHT2pVQTBMRk03c1ZmSHAzNEJnNlN4bDQ0elJLSVh0WjNSYnRadz09IiwiZGF0YWtleSI6IkFRRUJBSGh3bTBZYUlTSmVSdEptNW4xRzZ1cWVla1h1b1hYUGU1VUZjZTlScTgvMTR3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRUROMFhMYVF5TU90ci9kdURYQUlCRUlBN3NiWUN1K3VvWXRoeXZwS29kS0lNOThkRnBMQmR6L2gweU41RE9EanFoTU9raWZDYUFJcGEzL2NUbDRDOU1ialR2eXBBYStVdC9jNmM5dXM9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNjY1NzgyODA5fQ== https://451010677902.dkr.ecr.us east-1.amazonaws.com
         docker pull 451010677902.dkr.ecr.us-east-1.amazonaws.com/lambdatesting:$IMAGE_TAG
         docker run -dt --name web -p 80:80 451010677902.dkr.ecr.us-east-1.amazonaws.com/lambdatesting:$IMAGE_TAG
